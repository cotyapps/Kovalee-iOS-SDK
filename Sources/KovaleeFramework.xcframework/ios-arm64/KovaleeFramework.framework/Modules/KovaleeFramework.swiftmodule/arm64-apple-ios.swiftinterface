// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios16.4 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name KovaleeFramework
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import KovaleeFramework
import Swift
import _Concurrency
import _StringProcessing
public struct Configuration {
  public enum Environment {
    case sandbox
    case production
    case test
    public static func == (a: KovaleeFramework.Configuration.Environment, b: KovaleeFramework.Configuration.Environment) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
  public var environment: KovaleeFramework.Configuration.Environment
  public init(environment: KovaleeFramework.Configuration.Environment)
}
@_hasMissingDesignatedInitializers final public class KovaleeManager {
  public static var isInitialized: Swift.Bool {
    get
  }
  public static func initialize(configuration: KovaleeFramework.Configuration)
  public static var shared: KovaleeFramework.KovaleeManager {
    get
  }
  public static func terminate()
  @objc deinit
}
extension KovaleeFramework.KovaleeManager {
  public static func sendEvent(_ event: Swift.String)
  final public func sendEvent(_ event: Swift.String)
}
extension KovaleeFramework.Configuration.Environment : Swift.Equatable {}
extension KovaleeFramework.Configuration.Environment : Swift.Hashable {}
