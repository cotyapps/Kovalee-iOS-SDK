# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  desc "Release a new version with a patch bump_type"
  lane :patch do
    release("patch") # we could use __method__.to_s instead of duplicating the name
  end

  desc "Release a new version with a minor bump_type"
  lane :minor do
    release("minor")
  end

  desc "Release a new version with a major bump_type"
  lane :major do
    release("major")
  end

  lane :pod do
    podspec_name = "KovaleeSDK.podspec"
    pod_lib_lint(podspec: podspec_name)
    pod_push(path: podspec_name)
  end

  def release(type)
    sdk_podspec = "KovaleeSDK.podspec"
    ui_podspec = "KovaleeSDKUI.podspec"
    survey_podspec = "KovaleeSurvey.podspec"
    swift_file_path = "./Sources/KovaleeSDK/Kovalee.swift"

    pod_lib_lint
    version = version_bump_podspec(
      path: sdk_podspec,
      bump_type: type
    )

    version_bump_podspec(
      path: ui_podspec,
      bump_type: type
    )

    version = version_bump_podspec(
      path: survey_podspec,
      bump_type: type
    )

    update_version_in_swift(version)
    handle_git(version, [sdk_podspec, swift_file_path, ui_podspec, survey_podspec])

    pod_push(path: sdk_podspec)
    pod_push(path: ui_podspec)
    pod_push(path: survey_podspec)
  end
end

def update_version_in_swift(new_version)
  file_path = "../Sources/KovaleeSDK/Kovalee.swift"
  text = File.read(file_path)
  new_contents = text.gsub(/(let SDK_VERSION = ")[^"]+/, "\\1#{new_version}")

  # Write changes to the file
  File.open(file_path, "w") {|file| file.puts new_contents}
end

def handle_git(new_version, paths) 
  git_add
  git_commit(
    path: paths,
    message: "#{new_version} release"
  )

  add_git_tag(tag: "#{new_version}")
  push_to_git_remote
end 